# Kuan V, Denaxas S, Gonzalez-Izquierdo A, Direk K, Bhatti O, Husain S, Sutaria S, Hingorani M, Nitsch D, Parisinos C, Lumbers T, Mathur R, Sofat R, Casas JP, Wong I, Hemingway H, Hingorani A, 2024.

import sys, csv, re

codes = [{"code":"BBg2.11","system":"readv2"},{"code":"B627.11","system":"readv2"},{"code":"ByuDF11","system":"readv2"},{"code":"58953.0","system":"readv2"},{"code":"95012.0","system":"readv2"},{"code":"44617.0","system":"readv2"},{"code":"104386.0","system":"readv2"},{"code":"51680.0","system":"readv2"},{"code":"100532.0","system":"readv2"},{"code":"8649.0","system":"readv2"},{"code":"106969.0","system":"readv2"},{"code":"104790.0","system":"readv2"},{"code":"70374.0","system":"readv2"},{"code":"44318.0","system":"readv2"},{"code":"48253.0","system":"readv2"},{"code":"69767.0","system":"readv2"},{"code":"27416.0","system":"readv2"},{"code":"70740.0","system":"readv2"},{"code":"21463.0","system":"readv2"},{"code":"108719.0","system":"readv2"},{"code":"67203.0","system":"readv2"},{"code":"72196.0","system":"readv2"},{"code":"96379.0","system":"readv2"},{"code":"97852.0","system":"readv2"},{"code":"109780.0","system":"readv2"},{"code":"40513.0","system":"readv2"},{"code":"71117.0","system":"readv2"},{"code":"59115.0","system":"readv2"},{"code":"105559.0","system":"readv2"},{"code":"101114.0","system":"readv2"},{"code":"63994.0","system":"readv2"},{"code":"57737.0","system":"readv2"},{"code":"68964.0","system":"readv2"},{"code":"97577.0","system":"readv2"},{"code":"66367.0","system":"readv2"},{"code":"109714.0","system":"readv2"},{"code":"92380.0","system":"readv2"},{"code":"28639.0","system":"readv2"},{"code":"66327.0","system":"readv2"},{"code":"39906.0","system":"readv2"},{"code":"21402.0","system":"readv2"},{"code":"91674.0","system":"readv2"},{"code":"31492.0","system":"readv2"},{"code":"16460.0","system":"readv2"},{"code":"42579.0","system":"readv2"},{"code":"31576.0","system":"readv2"},{"code":"95058.0","system":"readv2"},{"code":"106970.0","system":"readv2"},{"code":"63699.0","system":"readv2"},{"code":"12335.0","system":"readv2"},{"code":"100544.0","system":"readv2"},{"code":"41754.0","system":"readv2"},{"code":"23711.0","system":"readv2"},{"code":"98596.0","system":"readv2"},{"code":"61251.0","system":"readv2"},{"code":"69980.0","system":"readv2"},{"code":"26111.0","system":"readv2"},{"code":"12464.0","system":"readv2"},{"code":"99240.0","system":"readv2"},{"code":"38005.0","system":"readv2"},{"code":"68353.0","system":"readv2"},{"code":"104620.0","system":"readv2"},{"code":"41841.0","system":"readv2"},{"code":"60242.0","system":"readv2"},{"code":"53551.0","system":"readv2"},{"code":"62380.0","system":"readv2"},{"code":"57427.0","system":"readv2"},{"code":"49262.0","system":"readv2"},{"code":"49253.0","system":"readv2"},{"code":"104152.0","system":"readv2"},{"code":"95545.0","system":"readv2"},{"code":"105038.0","system":"readv2"},{"code":"98961.0","system":"readv2"},{"code":"16774.0","system":"readv2"},{"code":"46967.0","system":"readv2"},{"code":"104862.0","system":"readv2"},{"code":"63973.0","system":"readv2"},{"code":"64336.0","system":"readv2"},{"code":"50668.0","system":"readv2"},{"code":"35014.0","system":"readv2"},{"code":"72714.0","system":"readv2"},{"code":"105095.0","system":"readv2"},{"code":"94995.0","system":"readv2"},{"code":"105966.0","system":"readv2"},{"code":"39883.0","system":"readv2"},{"code":"15027.0","system":"readv2"},{"code":"99655.0","system":"readv2"},{"code":"105889.0","system":"readv2"},{"code":"51895.0","system":"readv2"},{"code":"52591.0","system":"readv2"},{"code":"99951.0","system":"readv2"},{"code":"107166.0","system":"readv2"},{"code":"71238.0","system":"readv2"},{"code":"107973.0","system":"readv2"},{"code":"71304.0","system":"readv2"},{"code":"61146.0","system":"readv2"},{"code":"63723.0","system":"readv2"},{"code":"105636.0","system":"readv2"},{"code":"50695.0","system":"readv2"},{"code":"64515.0","system":"readv2"},{"code":"58015.0","system":"readv2"},{"code":"60275.0","system":"readv2"},{"code":"105203.0","system":"readv2"},{"code":"66603.0","system":"readv2"},{"code":"17887.0","system":"readv2"},{"code":"104934.0","system":"readv2"},{"code":"106867.0","system":"readv2"},{"code":"45264.0","system":"readv2"},{"code":"33869.0","system":"readv2"},{"code":"15504.0","system":"readv2"},{"code":"105286.0","system":"readv2"},{"code":"105925.0","system":"readv2"},{"code":"104391.0","system":"readv2"},{"code":"27965.0","system":"readv2"},{"code":"105709.0","system":"readv2"},{"code":"18383.0","system":"readv2"},{"code":"105955.0","system":"readv2"},{"code":"69301.0","system":"readv2"},{"code":"17460.0","system":"readv2"},{"code":"108182.0","system":"readv2"},{"code":"46877.0","system":"readv2"},{"code":"92068.0","system":"readv2"},{"code":"106063.0","system":"readv2"},{"code":"39798.0","system":"readv2"},{"code":"34352.0","system":"readv2"},{"code":"46931.0","system":"readv2"},{"code":"99887.0","system":"readv2"},{"code":"100352.0","system":"readv2"},{"code":"72725.0","system":"readv2"},{"code":"105020.0","system":"readv2"},{"code":"41369.0","system":"readv2"},{"code":"95715.0","system":"readv2"},{"code":"100006.0","system":"readv2"},{"code":"97756.0","system":"readv2"},{"code":"58082.0","system":"readv2"},{"code":"31749.0","system":"readv2"},{"code":"106884.0","system":"readv2"},{"code":"71619.0","system":"readv2"},{"code":"63105.0","system":"readv2"},{"code":"12006.0","system":"readv2"},{"code":"65180.0","system":"readv2"},{"code":"34089.0","system":"readv2"},{"code":"17178.0","system":"readv2"},{"code":"64947.0","system":"readv2"},{"code":"31794.0","system":"readv2"},{"code":"64670.0","system":"readv2"},{"code":"1483.0","system":"readv2"},{"code":"106137.0","system":"readv2"},{"code":"71652.0","system":"readv2"},{"code":"70509.0","system":"readv2"},{"code":"107949.0","system":"readv2"},{"code":"70842.0","system":"readv2"},{"code":"27562.0","system":"readv2"},{"code":"20437.0","system":"readv2"},{"code":"60504.0","system":"readv2"},{"code":"71262.0","system":"readv2"},{"code":"54190.0","system":"readv2"},{"code":"63375.0","system":"readv2"},{"code":"62437.0","system":"readv2"},{"code":"105375.0","system":"readv2"},{"code":"3371.0","system":"readv2"},{"code":"67518.0","system":"readv2"},{"code":"51852.0","system":"readv2"},{"code":"102594.0","system":"readv2"},{"code":"95464.0","system":"readv2"},{"code":"50696.0","system":"readv2"},{"code":"5179.0","system":"readv2"},{"code":"99695.0","system":"readv2"},{"code":"104412.0","system":"readv2"},{"code":"95949.0","system":"readv2"},{"code":"71031.0","system":"readv2"},{"code":"40766.0","system":"readv2"},{"code":"60092.0","system":"readv2"},{"code":"58962.0","system":"readv2"},{"code":"17182.0","system":"readv2"},{"code":"1481.0","system":"readv2"},{"code":"65701.0","system":"readv2"},{"code":"7940.0","system":"readv2"},{"code":"3604.0","system":"readv2"},{"code":"103245.0","system":"readv2"},{"code":"31726.0","system":"readv2"},{"code":"90201.0","system":"readv2"},{"code":"105085.0","system":"readv2"},{"code":"72241.0","system":"readv2"},{"code":"36114.0","system":"readv2"},{"code":"72433.0","system":"readv2"},{"code":"21549.0","system":"readv2"},{"code":"71625.0","system":"readv2"}];
REQUIRED_CODES = 1;
with open(sys.argv[1], 'r') as file_in, open('non-hodgkin-lymphoma-potential-cases.csv', 'w', newline='') as file_out:
    csv_reader = csv.DictReader(file_in)
    csv_writer = csv.DictWriter(file_out, csv_reader.fieldnames + ["nonhodgkin---primary-identified"])
    csv_writer.writeheader();
    codes_identified = 0;
    for row in csv_reader:
        newRow = row.copy();
        for cell in row:
            # Iterate cell lists (e.g. codes)
            for item in re.findall(r'\(([^,]*)\,', row[cell]):
                if(item in list(map(lambda code: code['code'], codes))): codes_identified+=1;
                if(codes_identified>=REQUIRED_CODES):
                    newRow["nonhodgkin---primary-identified"] = "CASE";
                    break;
            if(codes_identified>=REQUIRED_CODES): break;
        if(codes_identified<REQUIRED_CODES):
            newRow["nonhodgkin---primary-identified"] = "UNK";
        codes_identified=0;
        csv_writer.writerow(newRow)
